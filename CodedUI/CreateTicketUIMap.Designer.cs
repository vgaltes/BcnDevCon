// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace test2.CreateTicketUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class CreateTicketUIMap
    {
        
        /// <summary>
        /// CreateSampleTicket - Use 'CreateSampleTicketParams' to pass parameters into this method.
        /// </summary>
        public void CreateSampleTicket()
        {
            #region Variable Declarations
            HtmlEdit uITitleEdit = this.UICreateWindowsInterneWindow.UICreateDocument.UITitleEdit;
            HtmlComboBox uIEscalationLevelComboBox = this.UICreateWindowsInterneWindow.UICreateDocument.UIEscalationLevelComboBox;
            HtmlDocument uIHttpintranetfabrikamDocument = this.UICreateWindowsInterneWindow.UIItemFrame.UIHttpintranetfabrikamDocument;
            HtmlDiv uIBodyPane = this.UICreateWindowsInterneWindow.UICreateDocument.UIContentCustom.UIBodyPane;
            HtmlInputButton uICreateButton = this.UICreateWindowsInterneWindow.UICreateDocument.UIContentCustom.UICreateButton;
            #endregion

            // Type 'Sample ticket' in 'Title' text box
            uITitleEdit.Text = this.CreateSampleTicketParams.UITitleEditText;

            // Select 'Level 2' in 'Escalation Level' combo box
            uIEscalationLevelComboBox.SelectedItem = this.CreateSampleTicketParams.UIEscalationLevelComboBoxSelectedItem;

            // Click 'http://intranet.fabrikam.com/ServiceTickets/Create' document
            Mouse.Click(uIHttpintranetfabrikamDocument, new Point(69, 52));

            // Type 'This is a sample ticket' in 'http://intranet.fabrikam.com/ServiceTickets/Create' document
            Keyboard.SendKeys(uIHttpintranetfabrikamDocument, this.CreateSampleTicketParams.UIHttpintranetfabrikamDocumentSendKeys, ModifierKeys.None);

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover '</body>' pane at (509, 101)
            Mouse.Hover(uIBodyPane, new Point(509, 101));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(180, 10));
        }
        
        #region Properties
        public virtual CreateSampleTicketParams CreateSampleTicketParams
        {
            get
            {
                if ((this.mCreateSampleTicketParams == null))
                {
                    this.mCreateSampleTicketParams = new CreateSampleTicketParams();
                }
                return this.mCreateSampleTicketParams;
            }
        }
        
        public UICreateWindowsInterneWindow UICreateWindowsInterneWindow
        {
            get
            {
                if ((this.mUICreateWindowsInterneWindow == null))
                {
                    this.mUICreateWindowsInterneWindow = new UICreateWindowsInterneWindow();
                }
                return this.mUICreateWindowsInterneWindow;
            }
        }
        #endregion
        
        #region Fields
        private CreateSampleTicketParams mCreateSampleTicketParams;
        
        private UICreateWindowsInterneWindow mUICreateWindowsInterneWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CreateSampleTicket'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class CreateSampleTicketParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Sample ticket' in 'Title' text box
        /// </summary>
        public string UITitleEditText = "Sample ticket";
        
        /// <summary>
        /// Select 'Level 2' in 'Escalation Level' combo box
        /// </summary>
        public string UIEscalationLevelComboBoxSelectedItem = "Level 2";
        
        /// <summary>
        /// Type 'This is a sample ticket' in 'http://intranet.fabrikam.com/ServiceTickets/Create' document
        /// </summary>
        public string UIHttpintranetfabrikamDocumentSendKeys = "This is a sample ticket";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICreateWindowsInterneWindow : BrowserWindow
    {
        
        public UICreateWindowsInterneWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Create";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Create");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICreateDocument UICreateDocument
        {
            get
            {
                if ((this.mUICreateDocument == null))
                {
                    this.mUICreateDocument = new UICreateDocument(this);
                }
                return this.mUICreateDocument;
            }
        }
        
        public UIItemFrame UIItemFrame
        {
            get
            {
                if ((this.mUIItemFrame == null))
                {
                    this.mUIItemFrame = new UIItemFrame(this);
                }
                return this.mUIItemFrame;
            }
        }
        #endregion
        
        #region Fields
        private UICreateDocument mUICreateDocument;
        
        private UIItemFrame mUIItemFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICreateDocument : HtmlDocument
    {
        
        public UICreateDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ServiceTickets/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://intranet.fabrikam.com/ServiceTickets/Create";
            this.WindowTitles.Add("Create");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UITitleEdit
        {
            get
            {
                if ((this.mUITitleEdit == null))
                {
                    this.mUITitleEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITitleEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Title";
                    this.mUITitleEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Title";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Title";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "style=\"width: 500px;\" id=\"Title\" name=\"T";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUITitleEdit.WindowTitles.Add("Create");
                    #endregion
                }
                return this.mUITitleEdit;
            }
        }
        
        public HtmlComboBox UIEscalationLevelComboBox
        {
            get
            {
                if ((this.mUIEscalationLevelComboBox == null))
                {
                    this.mUIEscalationLevelComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIEscalationLevelComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "EscalationLevel";
                    this.mUIEscalationLevelComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "EscalationLevel";
                    this.mUIEscalationLevelComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIEscalationLevelComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Escalation Level";
                    this.mUIEscalationLevelComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIEscalationLevelComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIEscalationLevelComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIEscalationLevelComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=\"EscalationLevel\" name=\"EscalationLev";
                    this.mUIEscalationLevelComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIEscalationLevelComboBox.WindowTitles.Add("Create");
                    #endregion
                }
                return this.mUIEscalationLevelComboBox;
            }
        }
        
        public UIContentCustom UIContentCustom
        {
            get
            {
                if ((this.mUIContentCustom == null))
                {
                    this.mUIContentCustom = new UIContentCustom(this);
                }
                return this.mUIContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUITitleEdit;
        
        private HtmlComboBox mUIEscalationLevelComboBox;
        
        private UIContentCustom mUIContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIContentCustom : HtmlCustom
    {
        
        public UIContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "content";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "SECTION";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"content\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Create");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIBodyPane
        {
            get
            {
                if ((this.mUIBodyPane == null))
                {
                    this.mUIBodyPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBodyPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIBodyPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBodyPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n";
                    this.mUIBodyPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBodyPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "editor-field";
                    this.mUIBodyPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"editor-field\"";
                    this.mUIBodyPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "6";
                    this.mUIBodyPane.WindowTitles.Add("Create");
                    #endregion
                }
                return this.mUIBodyPane;
            }
        }
        
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = "glossyBox";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"glossyBox\" value=\"Create\" type=\"s";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "7";
                    this.mUICreateButton.WindowTitles.Add("Create");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIBodyPane;
        
        private HtmlInputButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemFrame : HtmlIFrame
    {
        
        public UIItemFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = null;
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.AbsolutePath] = "true;";
            this.FilterProperties[HtmlFrame.PropertyNames.PageUrl] = "javascript:true;";
            this.FilterProperties[HtmlFrame.PropertyNames.Title] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.Class] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "style=\"width: 500px; height: 197px; disp";
            this.FilterProperties[HtmlFrame.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Create");
            #endregion
        }
        
        #region Properties
        public HtmlDocument UIHttpintranetfabrikamDocument
        {
            get
            {
                if ((this.mUIHttpintranetfabrikamDocument == null))
                {
                    this.mUIHttpintranetfabrikamDocument = new HtmlDocument(this);
                    #region Search Criteria
                    this.mUIHttpintranetfabrikamDocument.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
                    this.mUIHttpintranetfabrikamDocument.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
                    this.mUIHttpintranetfabrikamDocument.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
                    this.mUIHttpintranetfabrikamDocument.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
                    this.mUIHttpintranetfabrikamDocument.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ServiceTickets/Create";
                    this.mUIHttpintranetfabrikamDocument.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://intranet.fabrikam.com/ServiceTickets/Create";
                    this.mUIHttpintranetfabrikamDocument.WindowTitles.Add("Create");
                    #endregion
                }
                return this.mUIHttpintranetfabrikamDocument;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDocument mUIHttpintranetfabrikamDocument;
        #endregion
    }
}
