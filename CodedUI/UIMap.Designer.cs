// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace test2
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// PrimerTest - Use 'PrimerTestParams' to pass parameters into this method.
        /// </summary>
        public void PrimerTest()
        {
            #region Variable Declarations
            HtmlHyperlink uICreateNewHyperlink = this.UIBlankPageWindowsInteWindow.UIHomePageDocument.UIContentCustom.UICreateNewHyperlink;
            HtmlEdit uITitleEdit = this.UIBlankPageWindowsInteWindow.UICreateDocument.UITitleEdit;
            HtmlComboBox uIEscalationLevelComboBox = this.UIBlankPageWindowsInteWindow.UICreateDocument.UIEscalationLevelComboBox;
            HtmlDocument uIHttpintranetfabrikamDocument = this.UIBlankPageWindowsInteWindow.UIItemFrame.UIHttpintranetfabrikamDocument;
            HtmlInputButton uICreateButton = this.UIBlankPageWindowsInteWindow.UICreateDocument.UIContentCustom.UICreateButton;
            HtmlHyperlink uIBacktoListHyperlink = this.UIBlankPageWindowsInteWindow.UIDetailsDocument.UIContentCustom.UIBacktoListHyperlink;
            WinButton uICloseButton = this.UIBlankPageWindowsInteWindow.UIServiceTicketsWindowTitleBar.UICloseButton;
            #endregion

            // Go to web page 'http://intranet.fabrikam.com/' using new browser instance
            this.UIBlankPageWindowsInteWindow.LaunchUrl(new System.Uri(this.PrimerTestParams.UIBlankPageWindowsInteWindowUrl));

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(48, 21));

            // Type 'new ticket' in 'Title' text box
            uITitleEdit.Text = this.PrimerTestParams.UITitleEditText;

            // Select 'Level 3' in 'Escalation Level' combo box
            uIEscalationLevelComboBox.SelectedItem = this.PrimerTestParams.UIEscalationLevelComboBoxSelectedItem;

            // Click 'http://intranet.fabrikam.com/ServiceTickets/Create' document
            Mouse.Click(uIHttpintranetfabrikamDocument, new Point(80, 61));

            // Type 'este u{Back}es un ticket de prueba' in 'http://intranet.fabrikam.com/ServiceTickets/Create' document
            Keyboard.SendKeys(uIHttpintranetfabrikamDocument, this.PrimerTestParams.UIHttpintranetfabrikamDocumentSendKeys, ModifierKeys.None);

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(194, 12));

            // Click 'Back to List' link
            Mouse.Click(uIBacktoListHyperlink, new Point(36, 9));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(23, 3));
        }
        
        /// <summary>
        /// TestCrearTicket - Use 'TestCrearTicketParams' to pass parameters into this method.
        /// </summary>
        public void TestCrearTicket()
        {
            #region Variable Declarations
            HtmlHyperlink uICreateNewHyperlink = this.UIBlankPageWindowsInteWindow.UIHomePageDocument.UIContentCustom.UICreateNewHyperlink;
            HtmlEdit uITitleEdit = this.UIBlankPageWindowsInteWindow.UICreateDocument.UITitleEdit;
            HtmlComboBox uIEscalationLevelComboBox = this.UIBlankPageWindowsInteWindow.UICreateDocument.UIEscalationLevelComboBox;
            HtmlDocument uIHttpintranetfabrikamDocument = this.UIBlankPageWindowsInteWindow.UIItemFrame.UIHttpintranetfabrikamDocument;
            HtmlInputButton uICreateButton = this.UIBlankPageWindowsInteWindow.UICreateDocument.UIContentCustom.UICreateButton;
            HtmlHyperlink uIBacktoListHyperlink = this.UIBlankPageWindowsInteWindow.UIDetailsDocument1.UIContentCustom.UIBacktoListHyperlink;
            HtmlHyperlink uIA014127Hyperlink = this.UIBlankPageWindowsInteWindow.UIServiceTicketsDocument.UIContentCustom.UIA014127Hyperlink;
            HtmlHyperlink uIDeleteHyperlink = this.UIBlankPageWindowsInteWindow.UIDetailsDocument1.UIContentCustom.UIDeleteHyperlink;
            HtmlInputButton uIDeleteButton = this.UIBlankPageWindowsInteWindow.UIDeleteDocument.UIContentCustom.UIDeleteButton;
            WinButton uICloseButton = this.UIBlankPageWindowsInteWindow.UIServiceTicketsWindowTitleBar.UICloseButton;
            #endregion

            // Go to web page 'http://intranet.fabrikam.com/' using new browser instance
            this.UIBlankPageWindowsInteWindow.LaunchUrl(new System.Uri(this.TestCrearTicketParams.UIBlankPageWindowsInteWindowUrl));

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(50, 22));

            // Type 'Nuevo ticket' in 'Title' text box
            uITitleEdit.Text = this.TestCrearTicketParams.UITitleEditText;

            // Select 'Level 2' in 'Escalation Level' combo box
            uIEscalationLevelComboBox.SelectedItem = this.TestCrearTicketParams.UIEscalationLevelComboBoxSelectedItem;

            // Click 'http://intranet.fabrikam.com/ServiceTickets/Create' document
            Mouse.Click(uIHttpintranetfabrikamDocument, new Point(86, 30));

            // Type 'Esto es un nuve{Back}{Back}{Back}nuevo tik{Back}cket' in 'http://intranet.fabrikam.com/ServiceTickets/Create' document
            Keyboard.SendKeys(uIHttpintranetfabrikamDocument, this.TestCrearTicketParams.UIHttpintranetfabrikamDocumentSendKeys, ModifierKeys.None);

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(170, 14));

            // Click 'Back to List' link
            Mouse.Click(uIBacktoListHyperlink, new Point(29, 6));

            // Click 'A014127' link
            Mouse.Click(uIA014127Hyperlink, new Point(27, 9));

            // Click 'Delete' link
            Mouse.Click(uIDeleteHyperlink, new Point(39, 27));

            // Click 'Delete' button
            Mouse.Click(uIDeleteButton, new Point(178, 22));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(16, 8));
        }
        
        #region Properties
        public virtual PrimerTestParams PrimerTestParams
        {
            get
            {
                if ((this.mPrimerTestParams == null))
                {
                    this.mPrimerTestParams = new PrimerTestParams();
                }
                return this.mPrimerTestParams;
            }
        }
        
        public virtual TestCrearTicketParams TestCrearTicketParams
        {
            get
            {
                if ((this.mTestCrearTicketParams == null))
                {
                    this.mTestCrearTicketParams = new TestCrearTicketParams();
                }
                return this.mTestCrearTicketParams;
            }
        }
        
        public UIBlankPageWindowsInteWindow UIBlankPageWindowsInteWindow
        {
            get
            {
                if ((this.mUIBlankPageWindowsInteWindow == null))
                {
                    this.mUIBlankPageWindowsInteWindow = new UIBlankPageWindowsInteWindow();
                }
                return this.mUIBlankPageWindowsInteWindow;
            }
        }
        #endregion
        
        #region Fields
        private PrimerTestParams mPrimerTestParams;
        
        private TestCrearTicketParams mTestCrearTicketParams;
        
        private UIBlankPageWindowsInteWindow mUIBlankPageWindowsInteWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PrimerTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PrimerTestParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://intranet.fabrikam.com/' using new browser instance
        /// </summary>
        public string UIBlankPageWindowsInteWindowUrl = "http://intranet.fabrikam.com/";
        
        /// <summary>
        /// Type 'new ticket' in 'Title' text box
        /// </summary>
        public string UITitleEditText = "new ticket";
        
        /// <summary>
        /// Select 'Level 3' in 'Escalation Level' combo box
        /// </summary>
        public string UIEscalationLevelComboBoxSelectedItem = "Level 3";
        
        /// <summary>
        /// Type 'este u{Back}es un ticket de prueba' in 'http://intranet.fabrikam.com/ServiceTickets/Create' document
        /// </summary>
        public string UIHttpintranetfabrikamDocumentSendKeys = "este u{Back}es un ticket de prueba";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestCrearTicket'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class TestCrearTicketParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://intranet.fabrikam.com/' using new browser instance
        /// </summary>
        public string UIBlankPageWindowsInteWindowUrl = "http://intranet.fabrikam.com/";
        
        /// <summary>
        /// Type 'Nuevo ticket' in 'Title' text box
        /// </summary>
        public string UITitleEditText = "Nuevo ticket";
        
        /// <summary>
        /// Select 'Level 2' in 'Escalation Level' combo box
        /// </summary>
        public string UIEscalationLevelComboBoxSelectedItem = "Level 2";
        
        /// <summary>
        /// Type 'Esto es un nuve{Back}{Back}{Back}nuevo tik{Back}cket' in 'http://intranet.fabrikam.com/ServiceTickets/Create' document
        /// </summary>
        public string UIHttpintranetfabrikamDocumentSendKeys = "Esto es un nuve{Back}{Back}{Back}nuevo tik{Back}cket";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBlankPageWindowsInteWindow : BrowserWindow
    {
        
        public UIBlankPageWindowsInteWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Blank Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Blank Page");
            this.WindowTitles.Add("Home Page");
            this.WindowTitles.Add("Create");
            this.WindowTitles.Add("Details");
            this.WindowTitles.Add("Service Tickets");
            this.WindowTitles.Add("Delete");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHomePageDocument UIHomePageDocument
        {
            get
            {
                if ((this.mUIHomePageDocument == null))
                {
                    this.mUIHomePageDocument = new UIHomePageDocument(this);
                }
                return this.mUIHomePageDocument;
            }
        }
        
        public UICreateDocument UICreateDocument
        {
            get
            {
                if ((this.mUICreateDocument == null))
                {
                    this.mUICreateDocument = new UICreateDocument(this);
                }
                return this.mUICreateDocument;
            }
        }
        
        public UIItemFrame UIItemFrame
        {
            get
            {
                if ((this.mUIItemFrame == null))
                {
                    this.mUIItemFrame = new UIItemFrame(this);
                }
                return this.mUIItemFrame;
            }
        }
        
        public UIDetailsDocument UIDetailsDocument
        {
            get
            {
                if ((this.mUIDetailsDocument == null))
                {
                    this.mUIDetailsDocument = new UIDetailsDocument(this);
                }
                return this.mUIDetailsDocument;
            }
        }
        
        public UIServiceTicketsWindowTitleBar UIServiceTicketsWindowTitleBar
        {
            get
            {
                if ((this.mUIServiceTicketsWindowTitleBar == null))
                {
                    this.mUIServiceTicketsWindowTitleBar = new UIServiceTicketsWindowTitleBar(this);
                }
                return this.mUIServiceTicketsWindowTitleBar;
            }
        }
        
        public UIDetailsDocument1 UIDetailsDocument1
        {
            get
            {
                if ((this.mUIDetailsDocument1 == null))
                {
                    this.mUIDetailsDocument1 = new UIDetailsDocument1(this);
                }
                return this.mUIDetailsDocument1;
            }
        }
        
        public UIServiceTicketsDocument UIServiceTicketsDocument
        {
            get
            {
                if ((this.mUIServiceTicketsDocument == null))
                {
                    this.mUIServiceTicketsDocument = new UIServiceTicketsDocument(this);
                }
                return this.mUIServiceTicketsDocument;
            }
        }
        
        public UIDeleteDocument UIDeleteDocument
        {
            get
            {
                if ((this.mUIDeleteDocument == null))
                {
                    this.mUIDeleteDocument = new UIDeleteDocument(this);
                }
                return this.mUIDeleteDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHomePageDocument mUIHomePageDocument;
        
        private UICreateDocument mUICreateDocument;
        
        private UIItemFrame mUIItemFrame;
        
        private UIDetailsDocument mUIDetailsDocument;
        
        private UIServiceTicketsWindowTitleBar mUIServiceTicketsWindowTitleBar;
        
        private UIDetailsDocument1 mUIDetailsDocument1;
        
        private UIServiceTicketsDocument mUIServiceTicketsDocument;
        
        private UIDeleteDocument mUIDeleteDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHomePageDocument : HtmlDocument
    {
        
        public UIHomePageDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://intranet.fabrikam.com/";
            this.WindowTitles.Add("Home Page");
            #endregion
        }
        
        #region Properties
        public UIContentCustom UIContentCustom
        {
            get
            {
                if ((this.mUIContentCustom == null))
                {
                    this.mUIContentCustom = new UIContentCustom(this);
                }
                return this.mUIContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIContentCustom mUIContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIContentCustom : HtmlCustom
    {
        
        public UIContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "content";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "SECTION";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"content\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Home Page");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICreateNewHyperlink
        {
            get
            {
                if ((this.mUICreateNewHyperlink == null))
                {
                    this.mUICreateNewHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Create New";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/ServiceTickets/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://intranet.fabrikam.com/ServiceTickets/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "glossyBox createNew";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"glossyBox createNew\" href=\"/Servi";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUICreateNewHyperlink.WindowTitles.Add("Home Page");
                    #endregion
                }
                return this.mUICreateNewHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICreateNewHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICreateDocument : HtmlDocument
    {
        
        public UICreateDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ServiceTickets/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://intranet.fabrikam.com/ServiceTickets/Create";
            this.WindowTitles.Add("Create");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UITitleEdit
        {
            get
            {
                if ((this.mUITitleEdit == null))
                {
                    this.mUITitleEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITitleEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Title";
                    this.mUITitleEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Title";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Title";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "style=\"width: 500px;\" id=\"Title\" name=\"T";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUITitleEdit.WindowTitles.Add("Create");
                    #endregion
                }
                return this.mUITitleEdit;
            }
        }
        
        public HtmlComboBox UIEscalationLevelComboBox
        {
            get
            {
                if ((this.mUIEscalationLevelComboBox == null))
                {
                    this.mUIEscalationLevelComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIEscalationLevelComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "EscalationLevel";
                    this.mUIEscalationLevelComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "EscalationLevel";
                    this.mUIEscalationLevelComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIEscalationLevelComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Escalation Level";
                    this.mUIEscalationLevelComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIEscalationLevelComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIEscalationLevelComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIEscalationLevelComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "id=\"EscalationLevel\" name=\"EscalationLev";
                    this.mUIEscalationLevelComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIEscalationLevelComboBox.WindowTitles.Add("Create");
                    #endregion
                }
                return this.mUIEscalationLevelComboBox;
            }
        }
        
        public UIContentCustom1 UIContentCustom
        {
            get
            {
                if ((this.mUIContentCustom == null))
                {
                    this.mUIContentCustom = new UIContentCustom1(this);
                }
                return this.mUIContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUITitleEdit;
        
        private HtmlComboBox mUIEscalationLevelComboBox;
        
        private UIContentCustom1 mUIContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIContentCustom1 : HtmlCustom
    {
        
        public UIContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "content";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "SECTION";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"content\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Create");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = "glossyBox";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"glossyBox\" value=\"Create\" type=\"s";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "7";
                    this.mUICreateButton.WindowTitles.Add("Create");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemFrame : HtmlIFrame
    {
        
        public UIItemFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = null;
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.AbsolutePath] = "true;";
            this.FilterProperties[HtmlFrame.PropertyNames.PageUrl] = "javascript:true;";
            this.FilterProperties[HtmlFrame.PropertyNames.Title] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.Class] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "style=\"width: 500px; height: 197px; disp";
            this.FilterProperties[HtmlFrame.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Create");
            #endregion
        }
        
        #region Properties
        public HtmlDocument UIHttpintranetfabrikamDocument
        {
            get
            {
                if ((this.mUIHttpintranetfabrikamDocument == null))
                {
                    this.mUIHttpintranetfabrikamDocument = new HtmlDocument(this);
                    #region Search Criteria
                    this.mUIHttpintranetfabrikamDocument.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
                    this.mUIHttpintranetfabrikamDocument.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
                    this.mUIHttpintranetfabrikamDocument.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
                    this.mUIHttpintranetfabrikamDocument.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
                    this.mUIHttpintranetfabrikamDocument.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ServiceTickets/Create";
                    this.mUIHttpintranetfabrikamDocument.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://intranet.fabrikam.com/ServiceTickets/Create";
                    this.mUIHttpintranetfabrikamDocument.WindowTitles.Add("Create");
                    #endregion
                }
                return this.mUIHttpintranetfabrikamDocument;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDocument mUIHttpintranetfabrikamDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDetailsDocument : HtmlDocument
    {
        
        public UIDetailsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ServiceTickets/Details/14";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://intranet.fabrikam.com/ServiceTickets/Details/14";
            this.WindowTitles.Add("Details");
            #endregion
        }
        
        #region Properties
        public UIContentCustom2 UIContentCustom
        {
            get
            {
                if ((this.mUIContentCustom == null))
                {
                    this.mUIContentCustom = new UIContentCustom2(this);
                }
                return this.mUIContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIContentCustom2 mUIContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIContentCustom2 : HtmlCustom
    {
        
        public UIContentCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "content";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "SECTION";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"content\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Details");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBacktoListHyperlink
        {
            get
            {
                if ((this.mUIBacktoListHyperlink == null))
                {
                    this.mUIBacktoListHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Back to List";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/ServiceTickets";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://intranet.fabrikam.com/ServiceTickets";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/ServiceTickets\"";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "8";
                    this.mUIBacktoListHyperlink.WindowTitles.Add("Details");
                    #endregion
                }
                return this.mUIBacktoListHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBacktoListHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIServiceTicketsWindowTitleBar : WinTitleBar
    {
        
        public UIServiceTicketsWindowTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Service Tickets");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Service Tickets");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDetailsDocument1 : HtmlDocument
    {
        
        public UIDetailsDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ServiceTickets/Details/27";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://intranet.fabrikam.com/ServiceTickets/Details/27";
            this.WindowTitles.Add("Details");
            #endregion
        }
        
        #region Properties
        public UIContentCustom3 UIContentCustom
        {
            get
            {
                if ((this.mUIContentCustom == null))
                {
                    this.mUIContentCustom = new UIContentCustom3(this);
                }
                return this.mUIContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIContentCustom3 mUIContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIContentCustom3 : HtmlCustom
    {
        
        public UIContentCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "content";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "SECTION";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"content\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Details");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBacktoListHyperlink
        {
            get
            {
                if ((this.mUIBacktoListHyperlink == null))
                {
                    this.mUIBacktoListHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Back to List";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/ServiceTickets";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://intranet.fabrikam.com/ServiceTickets";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/ServiceTickets\"";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "8";
                    this.mUIBacktoListHyperlink.WindowTitles.Add("Details");
                    #endregion
                }
                return this.mUIBacktoListHyperlink;
            }
        }
        
        public HtmlHyperlink UIDeleteHyperlink
        {
            get
            {
                if ((this.mUIDeleteHyperlink == null))
                {
                    this.mUIDeleteHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Delete";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/ServiceTickets/Delete/27";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://intranet.fabrikam.com/ServiceTickets/Delete/27";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "glossyBox";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"glossyBox\" href=\"/ServiceTickets/";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIDeleteHyperlink.WindowTitles.Add("Details");
                    #endregion
                }
                return this.mUIDeleteHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBacktoListHyperlink;
        
        private HtmlHyperlink mUIDeleteHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIServiceTicketsDocument : HtmlDocument
    {
        
        public UIServiceTicketsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Service Tickets";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ServiceTickets";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://intranet.fabrikam.com/ServiceTickets";
            this.WindowTitles.Add("Service Tickets");
            #endregion
        }
        
        #region Properties
        public UIContentCustom4 UIContentCustom
        {
            get
            {
                if ((this.mUIContentCustom == null))
                {
                    this.mUIContentCustom = new UIContentCustom4(this);
                }
                return this.mUIContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIContentCustom4 mUIContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIContentCustom4 : HtmlCustom
    {
        
        public UIContentCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "content";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "SECTION";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"content\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Service Tickets");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIA014127Hyperlink
        {
            get
            {
                if ((this.mUIA014127Hyperlink == null))
                {
                    this.mUIA014127Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIA014127Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIA014127Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIA014127Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIA014127Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "A014127";
                    this.mUIA014127Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/ServiceTickets/Details/27";
                    this.mUIA014127Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIA014127Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://intranet.fabrikam.com/ServiceTickets/Details/27";
                    this.mUIA014127Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIA014127Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/ServiceTickets/Details/27\"";
                    this.mUIA014127Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "18";
                    this.mUIA014127Hyperlink.WindowTitles.Add("Service Tickets");
                    #endregion
                }
                return this.mUIA014127Hyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIA014127Hyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDeleteDocument : HtmlDocument
    {
        
        public UIDeleteDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Delete";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ServiceTickets/Delete/27";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://intranet.fabrikam.com/ServiceTickets/Delete/27";
            this.WindowTitles.Add("Delete");
            #endregion
        }
        
        #region Properties
        public UIContentCustom5 UIContentCustom
        {
            get
            {
                if ((this.mUIContentCustom == null))
                {
                    this.mUIContentCustom = new UIContentCustom5(this);
                }
                return this.mUIContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIContentCustom5 mUIContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIContentCustom5 : HtmlCustom
    {
        
        public UIContentCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "content";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "SECTION";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"content\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Delete");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIDeleteButton
        {
            get
            {
                if ((this.mUIDeleteButton == null))
                {
                    this.mUIDeleteButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Delete";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.Class] = "glossyBox";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"glossyBox\" value=\"Delete\" type=\"s";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUIDeleteButton.WindowTitles.Add("Delete");
                    #endregion
                }
                return this.mUIDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIDeleteButton;
        #endregion
    }
}
